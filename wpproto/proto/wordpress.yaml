# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wp-dp
  labels:
    app: wp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wp
  template:
    metadata:
      labels:
        app: wp
    spec:
      containers:
      - name: wordpress
        image: wordpress
        resources:
          requests:
            cpu: "5m"
            memory: "10M"
        env:
        - name: WORDPRESS_DB_HOST
          valueFrom:
            configMapKeyRef:
              name: wpconfig
              key: host
        - name: WORDPRESS_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: wpconfig
              key: dbname
        - name: WORDPRESS_DB_USER
          valueFrom:
            configMapKeyRef:
              name: wpconfig
              key: dbuser
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: wpconfig
              key: dbpasswd
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
          - mountPath: /var/www/html
            name: wp-content
      volumes:
      - name: wp-content
        persistentVolumeClaim:
          claimName: wp-pvc        
---
# StorageClass
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
parameters:
  csi.storage.k8s.io/fstype: ext4
  type: gp3
---
# PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ebs-sc
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: wpsvc
spec:
  type: LoadBalancer
  selector:
    app: wp
  ports:
  - port: 80
    targetPort: 80
---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: wpconfig
data:
  host: mysql:3306
  dbname: wpdb
  dbuser: wpuser
  dbpasswd: P@ssw0rd